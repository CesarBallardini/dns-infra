---

# site.yml
#
# ansible-playbook -i vagrant-inventory provision/site.yml 

# ----------------------------------------------------------------
- hosts: mysqld

  vars_files: 
    - variables.yaml

  roles:
    - { role: geerlingguy.mysql, become: true }

  tasks:

    - name: Reload privilege tables
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES
      changed_when: False
      become: true

    - name: asegura que root puede ingresar a MySQL desde 192.168.33.10
      community.mysql.mysql_user:
        name: root
        password: myrootpass
        priv: '*.*:ALL,GRANT'
        append_privs: true
        host: 192.168.33.10
        state: present
      changed_when: False
      become: true



    - include_tasks: tasks/devops_goss.yml

# ----------------------------------------------------------------
- hosts: powerdns

  vars_files: 
    - variables.yaml

  pre_tasks:
    - name: Copy .my.cnf file with root password credentials.
      template:
        src: "root-my.cnf.j2"
        dest: "/root/.my.cnf"
        owner: root
        group: root
        mode: 0600
      become: true

  roles:
    - { role: PowerDNS.pdns, become: true }

  tasks:
    - name: verifica si el dominio example.com esta creado
      shell: |
        pdnsutil list-zone example.com

      become: true
      ignore_errors: true
      changed_when: false
      register: reg_example_com


    - name: crea un dominio example.com y agrega algunas entradas
      shell: |
        pdnsutil create-zone example.com ns1.example.com
        pdnsutil add-record example.com '' MX '25 mail.example.com'
        pdnsutil add-record example.com. www A 192.168.88.1

      become: true
      when: reg_example_com.rc != 0

# ----------------------------------------------------------------
- hosts: nsedit

  vars_files: 
    - variables.yaml

  roles:
    - { role: nsedit, become: true }

# ----------------------------------------------------------------
- hosts: ipam


